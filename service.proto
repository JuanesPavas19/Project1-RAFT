syntax = "proto3";

package database;

// Mensajes para leer y escribir datos
message ReadRequest {
  string query = 1; // Por ejemplo, puede ser una consulta tipo SQL-like
}

message ReadResponse {
  string result = 1; // Resultado de la lectura
}

message WriteRequest {
  string data = 1; // Datos a escribir en formato CSV-like
}

message WriteResponse {
  string status = 1; // Estado de la escritura
}

// Mensajes para el algoritmo Raft
message VoteRequest {
  int32 term = 1;
  string candidate_id = 2;
}

message VoteResponse {
  bool granted = 1;
}

message AppendEntriesRequest {
  string leader_id = 1;
}

message AppendEntriesResponse {
  bool success = 1;
}

// Mensaje para el Ping
message PingRequest {
  string message = 1; // Solo para probar la conexi√≥n
}

message PingResponse {
  string role = 1;  // Follower, leader, etc.
  string state = 2; // Active o Inactive
}

// Servicio para la base de datos y Raft
service DatabaseService {
  rpc ReadData(ReadRequest) returns (ReadResponse);
  rpc WriteData(WriteRequest) returns (WriteResponse);
  rpc RequestVote(VoteRequest) returns (VoteResponse);
  rpc AppendEntries(AppendEntriesRequest) returns (AppendEntriesResponse);
  rpc Ping(PingRequest) returns (PingResponse);  // Agregar el nuevo servicio
}
